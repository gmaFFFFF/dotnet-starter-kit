using System.Text.Json.Serialization;

namespace gmafffff.СтартовыйНабор.DDD.МодельПредметнойОбласти;

public abstract class СобытиеМодели<ТИд> : ПсевдоЗначимыйТип, ИСобытиеМодели<ТИд>
    where ТИд : IEquatable<ТИд> {
    [NonSerialized] [НеСравниватьПо] private ИСущность<ТИд>? _отправитель;

    [NonSerialized] [НеСравниватьПо] private ТИд? _отправительИд;

    [JsonConstructor]
    protected СобытиеМодели(ТИд отправительИд, DateTime произошло, Type отправительТип) {
        Произошло = произошло;
        ОтправительТип = отправительТип.MustNotBeNull();
        _отправительИд = отправительИд;
    }

    protected СобытиеМодели(ИСущность<ТИд> отправитель) : this(отправитель, DateTime.UtcNow) { }

    public СобытиеМодели(ИСущность<ТИд> отправитель, DateTime произошло) {
        _отправитель = отправитель.MustNotBeNull();
        Произошло = произошло;
        ОтправительТип = отправитель.GetType();
        ПопробоватьУстановитьИд();
    }

    public DateTime Произошло { get; init; }
    public Type ОтправительТип { get; init; }

    public ТИд? ОтправительИд {
        get => ПопробоватьУстановитьИд();
        init => _отправительИд = value;
    }

    /// <summary>
    ///     Устанавливает <see cref="ОтправительИд" /> из <see cref="ИСущность{ТИд}.Ид" />,
    ///     если она добавлена в хранилище
    /// </summary>
    /// <returns>
    ///     <see cref="ОтправительИд" />
    /// </returns>
    /// <remarks>
    ///     Не присваивает <see cref="ОтправительИд" /> значение,
    ///     если <see cref="ИСущность{ТИд}" /> не сохранена в хранилище.
    ///     Если <see cref="ИСущность{ТИд}" /> сохранена в хранилище, то после задания <see cref="ОтправительИд" /> ссылка на
    ///     неё освобождается
    /// </remarks>
    protected ТИд? ПопробоватьУстановитьИд() {
        if (_отправитель is null || !_отправитель.ИзХранилищаЛи())
            return _отправительИд;

        _отправительИд = _отправитель.Ид;
        _отправитель = null;
        return _отправительИд;
    }
}