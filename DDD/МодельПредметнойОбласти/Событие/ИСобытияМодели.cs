namespace gmafffff.СтартовыйНабор.DDD.МодельПредметнойОбласти;

/// <summary>
///     Универсальный интерфейс событий, произошедших с <see cref="ИСущность" />
/// </summary>
public interface ИСобытияМодели {
    /// <summary>
    ///     Множество произошедших событий
    /// </summary>
    IImmutableSet<ИСобытиеМодели> СобытияМодели { get; }

    /// <summary>
    ///     Передает события на публикацию и очищает <see cref="СобытияМодели" />
    /// </summary>
    /// <returns><see cref="IImmutableSet{T}" /> произошедших событий</returns>
    IImmutableSet<ИСобытиеМодели> СобытияМоделиПередатьНаПубликацию();
}

/// <summary>
///     Типизированный интерфейс событий, произошедших с экземплярами <see cref="ИСущность{Т}" />
/// </summary>
public interface ИСобытияМодели<ТИд> : ИСобытияМодели
    where ТИд : IEquatable<ТИд> {
    /// <summary>
    ///     Множество произошедших событий
    /// </summary>
    new IImmutableSet<ИСобытиеМодели<ТИд>> СобытияМодели { get; }

    /// <summary>
    ///     Передает события на публикацию и очищает <see cref="СобытияМодели" />
    /// </summary>
    /// <returns><see cref="IImmutableSet{T}" /> произошедших событий</returns>
    new IImmutableSet<ИСобытиеМодели<ТИд>> СобытияМоделиПередатьНаПубликацию();

    #region Реализация ИСобытияМодели

    IImmutableSet<ИСобытиеМодели> ИСобытияМодели.СобытияМодели
        => СобытияМодели.Cast<ИСобытиеМодели>().ToImmutableHashSet();

    IImmutableSet<ИСобытиеМодели> ИСобытияМодели.СобытияМоделиПередатьНаПубликацию() {
        return СобытияМоделиПередатьНаПубликацию().Cast<ИСобытиеМодели>().ToImmutableHashSet();
    }

    #endregion
}